version: 2.1
orbs:
  aws-ecr: circleci/aws-ecr@6.7.1
  aws-ecs: circleci/aws-ecs@1.1.0
jobs:
  test:
    machine:
      image: circleci/classic:edge
    steps:
      - checkout
      - run:
          name: docker-compose build
          command: docker-compose -f docker-compose.production.yml build
      - run:
          name: docker-compose up
          command: docker-compose -f docker-compose.production.yml up -d
      - run:
          name: sleep for waiting launch db
          command: sleep 1
      - run:
          name: create db
          command: docker-compose run web rails db:create
      - run:
          name: create tables
          command: docker-compose run web bundle exec ridgepole --apply -E test -f db/Schemafile -c config/database.yml
      - run:
          name: rubocop
          command: docker-compose run web bundle exec rubocop --auto-correct
      - run:
          name: rubocop-faker
          command: docker-compose run web bundle exec rubocop --require rubocop-faker --only Faker/DeprecatedArguments --auto-correct
      - run:
          name: test
          command: docker-compose run web bin/rspec
      - run:
          name: docker-compose down
          command: docker-compose down
workflows:
  build_and_deploy:
    jobs:
      - test
      - aws-ecr/build-and-push-image:
          requires:
            - test
          dockerfile: Dockerfile.production
          account-url: AWS_ECR_ACCOUNT_URL
          repo: "c0fee"
          region: AWS_REGION
          tag: "latest"
          extra-build-args: "--build-arg RAILS_MASTER_KEY=${RAILS_MASYER_KEY}"
          filters:
            branches:
              only: master
      - aws-ecs/deploy-service-update:
          requires:
            - aws-ecr/build-and-push-image
          aws-region: AWS_DEFAULT_REGION
          family: "c0fee"
          cluster-name: "c0fee"
          service-name: "c0fee"
          container-image-name-updates: "container=c0fee,tag=latest"
          filters:
            branches:
              only: master
